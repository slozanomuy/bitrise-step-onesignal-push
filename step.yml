#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  OneSignal Push
summary: |
  Send a push to a onesignal user using tags
description: |
  Send a push to a onesignal user using tagsmpty
website: https://github.com/slozano95/bitrise-step-onesignal-push
source_code_url: https://github.com/slozano95/bitrise-step-onesignal-push
support_url: https://github.com/slozano95/bitrise-step-onesignal-push/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - notification

is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""

deps:
  brew:
  - name: git
  - name: wget
  apt_get:
  - name: git
  - name: wget


toolkit:
  bash:
    entry_file: step.sh


inputs:
  - onesignal_app_id: "Your OneSignal App Id"
  - onesignal_tag_name: "Tag key"
  - onesignal_tag_relation: "Tag comparison relation (=, >, <, >=, <=)"
  - onesignal_tag_value: "Tag Value"
  - onesignal_rest_api_key: "OneSignal Api Key"
  - onesignal_message: "Message to send"
     
outputs:
  - onesignal_response:
    opts:
      title: "One Signal Push Status"
